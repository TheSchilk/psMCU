0x0:X:X = JMP MAIN # Jump to entry point (AUTO GENERATED)
0x1:X:X = RTRNI # No INTERRUPT label (AUTO GENERATED)
0x2:test7.psASM:1 = MAIN: LITA 10
0x3:test7.psASM:1 = CALL SUM
0x4:test7.psASM:1 = STOP: HALT
0x5:test7.psASM:1 = JMP STOP
0x6:test7.psASM:1 = SUM: NOP
0x7:test7.psASM:1 =     IFSM 0x106,1
0x8:test7.psASM:1 =         RTRN
0x9:test7.psASM:1 =     PUSH # Save A to the stack
0xa:test7.psASM:1 =     ADDL 0xff # Subtract 1 from n
0xb:test7.psASM:1 =     CALL SUM # Call SUM with n-1
0xc:test7.psASM:1 =     SWP
0xd:test7.psASM:1 =     POP
0xe:test7.psASM:1 =     ADD # calculate sum(n-1)+n
0xf:test7.psASM:1 =     LITB 0
0x10:test7.psASM:1 = RTRN
