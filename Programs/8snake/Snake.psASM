#
# Snake.psASM
#
# A simple snake game for an 8x8 LED Matrix
#

@include Setup.psASM
@include StdLib.psASM
@include Render.psASM
@include UpdateBoard.psASM
@include UpdateGamestate.psASM

# Entry point
MAIN:
    CALL GAME_OVER
    JMP GAME


# Game Start:
GAME:
    CALL SETUP
    JMP MAIN_LOOP

    # Game Loop:
    MAIN_LOOP: 
        CALL UPDATE_GAMESTATE
        
        # Check game over
        IFRM SYS3,S3_A0
            JMP GAME_OVER
       
        CALL UPDATE_BOARD
        CALL RENDER
        
        # DELAY
        CALL DELAY_DELAY

        JMP MAIN_LOOP

GAME_OVER: 
    CALL RENDER_GAME_OVER
    IFSM 0x105, 3 # If Enter is pressed
        JMP GAME
    JMP GAME_OVER


# #############

DELAY_DELAY:
    PUSHB
    
    LITB 200
   
   delay_delay_loop:
        ADDLB -1
        CALL DELAY
        IFSM SYS3,S3_B0
            JMP delay_delay_done
        JMP delay_delay_loop
    
    delay_delay_done:

    POPB
    RTRN

DELAY:
    PUSHA
    LITA 255
    delay_loop: 
        SUBL 1
        IFSM SYS3,S3_A0
            JMP delay_done
        JMP delay_loop
    delay_done:
    POPA
    RTRN

